<!DOCTYPE html>
<html lang="en" data-darkreader-mode="dynamic" data-darkreader-scheme="dark"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><style class="darkreader darkreader--fallback" media="screen"></style><style class="darkreader darkreader--text" media="screen"></style><style class="darkreader darkreader--invert" media="screen">.jfk-bubble.gtx-bubble, .captcheck_answer_label > input + img, span#closed_text > img[src^="https://www.gstatic.com/images/branding/googlelogo"], span[data-href^="https://www.hcaptcha.com/"] > #icon, ::-webkit-calendar-picker-indicator, img.Wirisformula {
    filter: invert(100%) hue-rotate(180deg) contrast(90%) grayscale(50%) !important;
}</style><style class="darkreader darkreader--inline" media="screen">[data-darkreader-inline-bgcolor] {
  background-color: var(--darkreader-inline-bgcolor) !important;
}
[data-darkreader-inline-bgimage] {
  background-image: var(--darkreader-inline-bgimage) !important;
}
[data-darkreader-inline-border] {
  border-color: var(--darkreader-inline-border) !important;
}
[data-darkreader-inline-border-bottom] {
  border-bottom-color: var(--darkreader-inline-border-bottom) !important;
}
[data-darkreader-inline-border-left] {
  border-left-color: var(--darkreader-inline-border-left) !important;
}
[data-darkreader-inline-border-right] {
  border-right-color: var(--darkreader-inline-border-right) !important;
}
[data-darkreader-inline-border-top] {
  border-top-color: var(--darkreader-inline-border-top) !important;
}
[data-darkreader-inline-boxshadow] {
  box-shadow: var(--darkreader-inline-boxshadow) !important;
}
[data-darkreader-inline-color] {
  color: var(--darkreader-inline-color) !important;
}
[data-darkreader-inline-fill] {
  fill: var(--darkreader-inline-fill) !important;
}
[data-darkreader-inline-stroke] {
  stroke: var(--darkreader-inline-stroke) !important;
}
[data-darkreader-inline-outline] {
  outline-color: var(--darkreader-inline-outline) !important;
}
[data-darkreader-inline-stopcolor] {
  stop-color: var(--darkreader-inline-stopcolor) !important;
}
[data-darkreader-inline-bg] {
  background: var(--darkreader-inline-bg) !important;
}
[data-darkreader-inline-invert] {
    filter: invert(100%) hue-rotate(180deg);
}</style><style class="darkreader darkreader--variables" media="screen">:root {
   --darkreader-neutral-background: #141515;
   --darkreader-neutral-text: #d6d4d2;
   --darkreader-selection-background: #004daa;
   --darkreader-selection-text: #e8e6e3;
}</style><style class="darkreader darkreader--root-vars" media="screen"></style><style class="darkreader darkreader--user-agent" media="screen">@layer {
html {
    background-color: #191a1a !important;
}
html {
    color-scheme: dark !important;
}
iframe {
    color-scheme: initial;
}
html, body {
    background-color: #191a1a;
}
html, body {
    border-color: #6f6b65;
    color: #e7e6e5;
}
a {
    color: #5c8bc2;
}
table {
    border-color: #575a5c;
}
mark {
    color: #e7e6e5;
}
::placeholder {
    color: #afaba6;
}
input:-webkit-autofill,
textarea:-webkit-autofill,
select:-webkit-autofill {
    background-color: #3f411f !important;
    color: #e7e6e5 !important;
}
::-webkit-scrollbar {
    background-color: #212323;
    color: #a8a49f;
}
::-webkit-scrollbar-thumb {
    background-color: #474a4b;
}
::-webkit-scrollbar-thumb:hover {
    background-color: #5a5d5f;
}
::-webkit-scrollbar-thumb:active {
    background-color: #4a4d4f;
}
::-webkit-scrollbar-corner {
    background-color: #191a1a;
}
* {
    scrollbar-color: #474a4b #212323;
}
::selection {
    background-color: #004daa !important;
    color: #e8e6e3 !important;
}
::-moz-selection {
    background-color: #004daa !important;
    color: #e8e6e3 !important;
}
}</style><title data-rh="true">Coping with Mutable State in Multiple Threads with Rust | by Kevin Hoffman | Medium</title><meta data-rh="true" charset="utf-8"><meta data-rh="true" name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=1"><meta data-rh="true" name="theme-color" content="#000000"><meta data-rh="true" name="twitter:app:name:iphone" content="Medium"><meta data-rh="true" name="twitter:app:id:iphone" content="828256236"><meta data-rh="true" property="al:ios:app_name" content="Medium"><meta data-rh="true" property="al:ios:app_store_id" content="828256236"><meta data-rh="true" property="al:android:package" content="com.medium.reader"><meta data-rh="true" property="fb:app_id" content="542599432471018"><meta data-rh="true" property="og:site_name" content="Medium"><meta data-rh="true" property="og:type" content="article"><meta data-rh="true" property="article:published_time" content="2018-03-05T17:42:58.844Z"><meta data-rh="true" name="title" content="Coping with Mutable State in Multiple Threads with Rust | by Kevin Hoffman | Medium"><meta data-rh="true" property="og:title" content="Coping with Mutable State in Multiple Threads with Rust"><meta data-rh="true" property="al:android:url" content="medium://p/9059c83b6c01"><meta data-rh="true" property="al:ios:url" content="medium://p/9059c83b6c01"><meta data-rh="true" property="al:android:app_name" content="Medium"><meta data-rh="true" name="description" content="One of the value propositions most frequently lauded by Rust developers is its freedom from data races. The compiler will literally not allow you to build code that could ever produce a situation…"><meta data-rh="true" property="og:description" content="One of the value propositions most frequently lauded by Rust developers is its freedom from data races. The compiler will literally not…"><meta data-rh="true" property="og:url" content="https://kevinhoffman.medium.com/coping-with-mutable-state-in-multiple-threads-with-rust-9059c83b6c01"><meta data-rh="true" property="al:web:url" content="https://kevinhoffman.medium.com/coping-with-mutable-state-in-multiple-threads-with-rust-9059c83b6c01"><meta data-rh="true" property="article:author" content="https://kevinhoffman.medium.com"><meta data-rh="true" name="author" content="Kevin Hoffman"><meta data-rh="true" name="robots" content="index,follow,max-image-preview:large"><meta data-rh="true" name="referrer" content="unsafe-url"><meta data-rh="true" property="twitter:title" content="Coping with Mutable State in Multiple Threads with Rust"><meta data-rh="true" name="twitter:site" content="@Medium"><meta data-rh="true" name="twitter:app:url:iphone" content="medium://p/9059c83b6c01"><meta data-rh="true" property="twitter:description" content="One of the value propositions most frequently lauded by Rust developers is its freedom from data races. The compiler will literally not…"><meta data-rh="true" name="twitter:card" content="summary"><meta data-rh="true" name="twitter:creator" content="@KevinHoffman"><meta data-rh="true" name="twitter:label1" content="Reading time"><meta data-rh="true" name="twitter:data1" content="6 min read"><link data-rh="true" rel="icon" href="https://miro.medium.com/v2/1*m-R_BkNf1Qjr1YbyOIJY2w.png"><link data-rh="true" rel="search" type="application/opensearchdescription+xml" title="Medium" href="https://downloader.la/osd.xml"><link data-rh="true" rel="apple-touch-icon" sizes="152x152" href="https://miro.medium.com/v2/resize:fill:152:152/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"><link data-rh="true" rel="apple-touch-icon" sizes="120x120" href="https://miro.medium.com/v2/resize:fill:120:120/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"><link data-rh="true" rel="apple-touch-icon" sizes="76x76" href="https://miro.medium.com/v2/resize:fill:76:76/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"><link data-rh="true" rel="apple-touch-icon" sizes="60x60" href="https://miro.medium.com/v2/resize:fill:60:60/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"><link data-rh="true" rel="mask-icon" href="https://cdn-static-1.medium.com/_/fp/icons/Medium-Avatar-500x500.svg" color="#171717"><link data-rh="true" rel="preconnect" href="https://glyph.medium.com/" crossorigin=""><link data-rh="true" id="glyph_preload_link" rel="preload" as="style" type="text/css" href="Coping%20with%20Mutable%20State%20in%20Multiple%20Threads%20with%20Rust%20_%20by%20Kevin%20Hoffman%20_%20Medium_files/unbound.css"><link data-rh="true" id="glyph_link" rel="stylesheet" type="text/css" href="Coping%20with%20Mutable%20State%20in%20Multiple%20Threads%20with%20Rust%20_%20by%20Kevin%20Hoffman%20_%20Medium_files/unbound.css"><link data-rh="true" rel="author" href="https://kevinhoffman.medium.com/"><link data-rh="true" rel="canonical" href="https://kevinhoffman.medium.com/coping-with-mutable-state-in-multiple-threads-with-rust-9059c83b6c01"><link data-rh="true" rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/9059c83b6c01"><style type="text/css" data-fela-rehydration="463" data-fela-type="STATIC">html{box-sizing:border-box;-webkit-text-size-adjust:100%}*, *:before, *:after{box-sizing:inherit}body{margin:0;padding:0;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;color:rgba(0,0,0,0.8);position:relative;min-height:100vh}h1, h2, h3, h4, h5, h6, dl, dd, ol, ul, menu, figure, blockquote, p, pre, form{margin:0}menu, ol, ul{padding:0;list-style:none;list-style-image:none}main{display:block}a{color:inherit;text-decoration:none}a, button, input{-webkit-tap-highlight-color:transparent}img, svg{vertical-align:middle}button{background:transparent;overflow:visible}button, input, optgroup, select, textarea{margin:0}:root{--reach-tabs:1;--reach-menu-button:1}#speechify-root{font-family:Sohne, sans-serif}div[data-popper-reference-hidden="true"]{visibility:hidden;pointer-events:none}.grecaptcha-badge{visibility:hidden}
/*XCode style (c) Angel Garcia <angelgarcia.mail@gmail.com>*/.hljs {background: #fff;color: black;
}/* Gray DOCTYPE selectors like WebKit */
.xml .hljs-meta {color: #c0c0c0;
}.hljs-comment,
.hljs-quote {color: #007400;
}.hljs-tag,
.hljs-attribute,
.hljs-keyword,
.hljs-selector-tag,
.hljs-literal,
.hljs-name {color: #aa0d91;
}.hljs-variable,
.hljs-template-variable {color: #3F6E74;
}.hljs-code,
.hljs-string,
.hljs-meta .hljs-string {color: #c41a16;
}.hljs-regexp,
.hljs-link {color: #0E0EFF;
}.hljs-title,
.hljs-symbol,
.hljs-bullet,
.hljs-number {color: #1c00cf;
}.hljs-section,
.hljs-meta {color: #643820;
}.hljs-title.class_,
.hljs-class .hljs-title,
.hljs-type,
.hljs-built_in,
.hljs-params {color: #5c2699;
}.hljs-attr {color: #836C28;
}.hljs-subst {color: #000;
}.hljs-formula {background-color: #eee;font-style: italic;
}.hljs-addition {background-color: #baeeba;
}.hljs-deletion {background-color: #ffc8bd;
}.hljs-selector-id,
.hljs-selector-class {color: #9b703f;
}.hljs-doctag,
.hljs-strong {font-weight: bold;
}.hljs-emphasis {font-style: italic;
}
</style><style class="darkreader darkreader--sync" media="screen"></style><style type="text/css" data-fela-rehydration="463" data-fela-type="KEYFRAME">@-webkit-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@-moz-keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}@keyframes k1{0%{opacity:0.8}50%{opacity:0.5}100%{opacity:0.8}}</style><style class="darkreader darkreader--sync" media="screen"></style><style type="text/css" data-fela-rehydration="463" data-fela-type="RULE">.a{font-family:medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif}.b{font-weight:400}.c{background-color:rgba(255, 255, 255, 1)}.l{display:block}.m{position:sticky}.n{top:0}.o{z-index:500}.p{padding:0 24px}.q{align-items:center}.r{border-bottom:solid 1px #F2F2F2}.y{height:41px}.z{line-height:20px}.ab{display:flex}.ac{height:57px}.ae{flex:1 0 auto}.af{color:inherit}.ag{fill:inherit}.ah{font-size:inherit}.ai{border:inherit}.aj{font-family:inherit}.ak{letter-spacing:inherit}.al{font-weight:inherit}.am{padding:0}.an{margin:0}.ao{cursor:pointer}.ap:disabled{cursor:not-allowed}.aq:disabled{color:#6B6B6B}.ar:disabled{fill:#6B6B6B}.au path{fill:#000000}.av{height:27px}.aw{margin-left:16px}.ax{border:none}.ay{border-radius:20px}.az{width:240px}.ba{background:#F9F9F9}.bb path{fill:#6B6B6B}.bd{outline:none}.be{font-family:sohne, "Helvetica Neue", Helvetica, Arial, sans-serif}.bf{font-size:14px}.bg{width:100%}.bh{padding:10px 20px 10px 0}.bi{background-color:transparent}.bj{color:#242424}.bk::placeholder{color:#6B6B6B}.bl{display:inline-block}.bm{margin-left:12px}.bn{margin-right:12px}.bo{border-radius:4px}.bp{margin-left:24px}.bq{height:24px}.bw{background-color:#F9F9F9}.bx{border-radius:50%}.by{height:32px}.bz{width:32px}.ca{justify-content:center}.cg{max-width:680px}.ch{min-width:0}.ci{animation:k1 1.2s ease-in-out infinite}.cj{height:100vh}.ck{margin-bottom:16px}.cl{margin-top:48px}.cm{align-items:flex-start}.cn{flex-direction:column}.co{justify-content:space-between}.cp{margin-bottom:24px}.cv{width:80%}.cw{background-color:#F2F2F2}.dc{height:44px}.dd{width:44px}.de{margin:auto 0}.df{margin-bottom:4px}.dg{height:16px}.dh{width:120px}.di{width:80px}.do{margin-bottom:8px}.dp{width:96%}.dq{width:98%}.dr{width:81%}.ds{margin-left:8px}.dt{color:#6B6B6B}.du{font-size:13px}.dv{height:100%}.eo{color:#FFFFFF}.ep{fill:#FFFFFF}.eq{background:#1A8917}.er{border-color:#1A8917}.ev:disabled{cursor:inherit !important}.ew:disabled{opacity:0.3}.ex:disabled:hover{background:#1A8917}.ey:disabled:hover{border-color:#1A8917}.ez{border-radius:99em}.fa{border-width:1px}.fb{border-style:solid}.fc{box-sizing:border-box}.fd{text-decoration:none}.fe{text-align:center}.fh{margin-right:32px}.fi{position:relative}.fj{fill:#6B6B6B}.fm{background:transparent}.fn svg{margin-left:4px}.fo svg{fill:#6B6B6B}.fq{box-shadow:inset 0 0 0 1px rgba(0, 0, 0, 0.05)}.fr{position:absolute}.fy{margin:0 24px}.gc{background:rgba(255, 255, 255, 1)}.gd{border:1px solid #F2F2F2}.ge{box-shadow:0 1px 4px #F2F2F2}.gf{max-height:100vh}.gg{overflow-y:auto}.gh{left:0}.gi{top:calc(100vh + 100px)}.gj{bottom:calc(100vh + 100px)}.gk{width:10px}.gl{pointer-events:none}.gm{word-break:break-word}.gn{word-wrap:break-word}.go:after{display:block}.gp:after{content:""}.gq:after{clear:both}.gr{line-height:1.23}.gs{letter-spacing:0}.gt{font-style:normal}.gu{font-weight:700}.hz{align-items:baseline}.ia{width:48px}.ib{height:48px}.ic{border:2px solid rgba(255, 255, 255, 1)}.id{z-index:0}.ie{box-shadow:none}.if{border:1px solid rgba(0, 0, 0, 0.05)}.ig{margin-bottom:2px}.ih{flex-wrap:nowrap}.ii{font-size:16px}.ij{line-height:24px}.il{margin:0 8px}.im{display:inline}.in{color:#1A8917}.io{fill:#1A8917}.ir{flex:0 0 auto}.iu{flex-wrap:wrap}.iv{padding-left:8px}.iw{padding-right:8px}.jx> *{flex-shrink:0}.jy{overflow-x:scroll}.jz::-webkit-scrollbar{display:none}.ka{scrollbar-width:none}.kb{-ms-overflow-style:none}.kc{width:74px}.kd{flex-direction:row}.ke{z-index:2}.kf{margin-right:4px}.ki{-webkit-user-select:none}.kj{border:0}.kk{fill:rgba(117, 117, 117, 1)}.kn{outline:0}.ko{user-select:none}.kp> svg{pointer-events:none}.ky{cursor:progress}.kz{margin-left:4px}.la{margin-top:0px}.lb{opacity:1}.lc{padding:4px 0}.lf{width:16px}.lh{display:inline-flex}.ln{max-width:100%}.lo{padding:8px 2px}.lp svg{color:#6B6B6B}.mg{line-height:1.58}.mh{letter-spacing:-0.004em}.mi{font-family:source-serif-pro, Georgia, Cambria, "Times New Roman", Times, serif}.nd{margin-bottom:-0.46em}.ne{font-style:italic}.nf{list-style-type:decimal}.ng{margin-left:30px}.nh{padding-left:0px}.ns{overflow-x:auto}.nt{font-family:source-code-pro, Menlo, Monaco, "Courier New", Courier, monospace}.nu{padding:20px}.nv{border-radius:0}.nw{background:#F2F2F2}.nx{line-height:1.18}.ny{letter-spacing:-0.022em}.nz{margin-top:-0.09em}.oa{margin-bottom:-0.09em}.ob{white-space:pre-wrap}.oc{min-width:fit-content}.od{margin-top:0.91em}.oe{padding:2px 4px}.of{font-size:75%}.og> strong{font-family:inherit}.oh{margin-bottom:26px}.oi{margin-top:6px}.oj{margin-top:8px}.ok{margin-right:8px}.ol{padding:8px 16px}.om{border-radius:100px}.on{transition:background 300ms ease}.op{white-space:nowrap}.oq{border-top:none}.ow{height:52px}.ox{max-height:52px}.oy{box-sizing:content-box}.oz{position:static}.pa{z-index:1}.pc{max-width:155px}.pi{margin-right:20px}.po{align-items:flex-end}.pp{width:76px}.pq{height:76px}.pr{border:2px solid #F9F9F9}.ps{height:72px}.pt{width:72px}.pu{width:auto}.pv{stroke:#F2F2F2}.pw{height:36px}.px{width:36px}.py{color:#F2F2F2}.pz{fill:#F2F2F2}.qa{border-color:#F2F2F2}.qg{font-weight:500}.qh{font-size:24px}.qi{line-height:30px}.qj{letter-spacing:-0.016em}.qk{margin-top:16px}.ql{height:0px}.qm{border-bottom:solid 1px #E5E5E5}.qs{margin-top:72px}.qt{padding:24px 0}.qu{margin-bottom:0px}.qv{margin-right:16px}.as:hover:not(:disabled){color:rgba(25, 25, 25, 1)}.at:hover:not(:disabled){fill:rgba(25, 25, 25, 1)}.es:hover{background:#156D12}.et:hover{border-color:#156D12}.eu:hover{cursor:pointer}.fk:hover{color:#242424}.fl:hover{fill:#242424}.fp:hover svg{fill:#242424}.fs:hover{background-color:rgba(0, 0, 0, 0.1)}.ik:hover{text-decoration:underline}.ip:hover:not(:disabled){color:#156D12}.iq:hover:not(:disabled){fill:#156D12}.km:hover{fill:rgba(8, 8, 8, 1)}.ld:hover{fill:#000000}.le:hover p{color:#000000}.lg:hover{color:#000000}.lq:hover svg{color:#000000}.oo:hover{background-color:#F2F2F2}.qb:hover{background:#F2F2F2}.qc:hover{border-color:#F2F2F2}.qd:hover{cursor:wait}.qe:hover{color:#F2F2F2}.qf:hover{fill:#F2F2F2}.bc:focus-within path{fill:#242424}.kl:focus{fill:rgba(8, 8, 8, 1)}.lr:focus svg{color:#000000}.kq:active{border-style:none}</style><style class="darkreader darkreader--sync" media="screen"></style><style type="text/css" data-fela-rehydration="463" data-fela-type="RULE" media="all and (min-width: 1080px)">.d{display:none}.bv{width:64px}.cf{margin:0 64px}.cu{height:48px}.db{margin-bottom:52px}.dn{margin-bottom:48px}.ee{font-size:14px}.ef{line-height:20px}.el{font-size:13px}.em{padding:5px 12px}.fg{display:flex}.fx{margin-bottom:68px}.gb{max-width:680px}.hp{font-size:42px}.hq{margin-top:1.19em}.hr{margin-bottom:32px}.hs{line-height:52px}.ht{letter-spacing:-0.011em}.hy{align-items:center}.jj{border-top:solid 1px #F2F2F2}.jk{border-bottom:solid 1px #F2F2F2}.jl{margin:32px 0 0}.jm{padding:3px 8px}.jv> *{margin-right:24px}.jw> :last-child{margin-right:0}.kx{margin-top:0px}.lm{margin:0}.mz{font-size:20px}.na{margin-top:2.14em}.nb{line-height:32px}.nc{letter-spacing:-0.003em}.nm{margin-top:1.14em}.nr{margin-top:56px}.ov{margin-bottom:88px}.ph{display:inline-block}.pn{padding-top:72px}.qr{margin-top:40px}</style><style class="darkreader darkreader--sync" media="screen"></style><style type="text/css" data-fela-rehydration="463" data-fela-type="RULE" media="all and (max-width: 1079.98px)">.e{display:none}.kw{margin-top:0px}.pg{display:inline-block}</style><style class="darkreader darkreader--sync" media="screen"></style><style type="text/css" data-fela-rehydration="463" data-fela-type="RULE" media="all and (max-width: 903.98px)">.f{display:none}.kv{margin-top:0px}.pf{display:inline-block}</style><style class="darkreader darkreader--sync" media="screen"></style><style type="text/css" data-fela-rehydration="463" data-fela-type="RULE" media="all and (max-width: 727.98px)">.g{display:none}.kt{margin-top:0px}.ku{margin-right:0px}.pe{display:inline-block}</style><style class="darkreader darkreader--sync" media="screen"></style><style type="text/css" data-fela-rehydration="463" data-fela-type="RULE" media="all and (max-width: 551.98px)">.h{display:none}.s{display:flex}.t{justify-content:space-between}.br{width:24px}.cb{margin:0 24px}.cq{height:40px}.cx{margin-bottom:44px}.dj{margin-bottom:32px}.dw{font-size:13px}.dx{line-height:20px}.eg{padding:0px 8px 1px}.ft{margin-bottom:4px}.gv{font-size:32px}.gw{margin-top:1.01em}.gx{margin-bottom:24px}.gy{line-height:38px}.gz{letter-spacing:-0.014em}.hu{align-items:flex-start}.is{flex-direction:column}.ix{margin:24px -24px 0}.iy{padding:0}.jn> *{margin-right:8px}.jo> :last-child{margin-right:24px}.kg{margin-left:0px}.kr{margin-top:0px}.ks{margin-right:0px}.li{margin:0}.ls{border:1px solid #F2F2F2}.lt{border-radius:99em}.lu{padding:0px 16px 0px 12px}.lv{height:38px}.lw{align-items:center}.ly svg{margin-right:8px}.mj{font-size:18px}.mk{margin-top:1.56em}.ml{line-height:28px}.mm{letter-spacing:-0.003em}.ni{margin-top:1.34em}.nn{margin-top:40px}.or{margin-bottom:80px}.pd{display:inline-block}.pj{padding-top:48px}.qn{margin-top:32px}.lx:hover{border-color:#E5E5E5}</style><style class="darkreader darkreader--sync" media="screen"></style><style type="text/css" data-fela-rehydration="463" data-fela-type="RULE" media="all and (min-width: 904px) and (max-width: 1079.98px)">.i{display:none}.bu{width:64px}.ce{margin:0 64px}.ct{height:48px}.da{margin-bottom:52px}.dm{margin-bottom:48px}.ec{font-size:14px}.ed{line-height:20px}.ej{font-size:13px}.ek{padding:5px 12px}.ff{display:flex}.fw{margin-bottom:68px}.ga{max-width:680px}.hk{font-size:42px}.hl{margin-top:1.19em}.hm{margin-bottom:32px}.hn{line-height:52px}.ho{letter-spacing:-0.011em}.hx{align-items:center}.jf{border-top:solid 1px #F2F2F2}.jg{border-bottom:solid 1px #F2F2F2}.jh{margin:32px 0 0}.ji{padding:3px 8px}.jt> *{margin-right:24px}.ju> :last-child{margin-right:0}.ll{margin:0}.mv{font-size:20px}.mw{margin-top:2.14em}.mx{line-height:32px}.my{letter-spacing:-0.003em}.nl{margin-top:1.14em}.nq{margin-top:56px}.ou{margin-bottom:88px}.pm{padding-top:72px}.qq{margin-top:40px}</style><style class="darkreader darkreader--sync" media="screen"></style><style type="text/css" data-fela-rehydration="463" data-fela-type="RULE" media="all and (min-width: 728px) and (max-width: 903.98px)">.j{display:none}.w{display:flex}.x{justify-content:space-between}.bt{width:64px}.cd{margin:0 48px}.cs{height:48px}.cz{margin-bottom:52px}.dl{margin-bottom:48px}.ea{font-size:13px}.eb{line-height:20px}.ei{padding:0px 8px 1px}.fv{margin-bottom:68px}.fz{max-width:680px}.hf{font-size:42px}.hg{margin-top:1.19em}.hh{margin-bottom:32px}.hi{line-height:52px}.hj{letter-spacing:-0.011em}.hw{align-items:center}.jb{border-top:solid 1px #F2F2F2}.jc{border-bottom:solid 1px #F2F2F2}.jd{margin:32px 0 0}.je{padding:3px 8px}.jr> *{margin-right:24px}.js> :last-child{margin-right:0}.lk{margin:0}.mr{font-size:20px}.ms{margin-top:2.14em}.mt{line-height:32px}.mu{letter-spacing:-0.003em}.nk{margin-top:1.14em}.np{margin-top:56px}.ot{margin-bottom:88px}.pl{padding-top:72px}.qp{margin-top:40px}</style><style class="darkreader darkreader--sync" media="screen"></style><style type="text/css" data-fela-rehydration="463" data-fela-type="RULE" media="all and (min-width: 552px) and (max-width: 727.98px)">.k{display:none}.u{display:flex}.v{justify-content:space-between}.bs{width:24px}.cc{margin:0 24px}.cr{height:40px}.cy{margin-bottom:44px}.dk{margin-bottom:32px}.dy{font-size:13px}.dz{line-height:20px}.eh{padding:0px 8px 1px}.fu{margin-bottom:4px}.ha{font-size:32px}.hb{margin-top:1.01em}.hc{margin-bottom:24px}.hd{line-height:38px}.he{letter-spacing:-0.014em}.hv{align-items:flex-start}.it{flex-direction:column}.iz{margin:24px 0 0}.ja{padding:0}.jp> *{margin-right:8px}.jq> :last-child{margin-right:8px}.kh{margin-left:0px}.lj{margin:0}.lz{border:1px solid #F2F2F2}.ma{border-radius:99em}.mb{padding:0px 16px 0px 12px}.mc{height:38px}.md{align-items:center}.mf svg{margin-right:8px}.mn{font-size:18px}.mo{margin-top:1.56em}.mp{line-height:28px}.mq{letter-spacing:-0.003em}.nj{margin-top:1.34em}.no{margin-top:40px}.os{margin-bottom:80px}.pk{padding-top:48px}.qo{margin-top:32px}.me:hover{border-color:#E5E5E5}</style><style class="darkreader darkreader--sync" media="screen"></style><style type="text/css" data-fela-rehydration="463" data-fela-type="RULE" media="print">.pb{display:none}</style><meta name="darkreader" content="a4d019f3ae4849f1baa3ecf2424a6507"><style class="darkreader darkreader--override" media="screen">.vimvixen-hint {
    background-color: #68541f !important;
    border-color: #c2ae60 !important;
    color: #ede8d8 !important;
}
#vimvixen-console-frame {
    color-scheme: light !important;
}
::placeholder {
    opacity: 0.5 !important;
}
#edge-translate-panel-body,
.MuiTypography-body1,
.nfe-quote-text {
    color: var(--darkreader-neutral-text) !important;
}
gr-main-header {
    background-color: #21363d !important;
}
.tou-z65h9k,
.tou-mignzq,
.tou-1b6i2ox,
.tou-lnqlqk {
    background-color: var(--darkreader-neutral-background) !important;
}
.tou-75mvi {
    background-color: #0f1d22 !important;
}
.tou-ta9e87,
.tou-1w3fhi0,
.tou-1b8t2us,
.tou-py7lfi,
.tou-1lpmd9d,
.tou-1frrtv8,
.tou-17ezmgn {
    background-color: #0a0a0a !important;
}
.tou-uknfeu {
    background-color: #1d160d !important;
}
.tou-6i3zyv {
    background-color: #32515c !important;
}
div.mermaid-viewer-control-panel .btn {
    background-color: var(--darkreader-neutral-background);
    fill: var(--darkreader-neutral-text);
}
svg g rect.er {
    fill: var(--darkreader-neutral-background) !important;
}
svg g rect.er.entityBox {
    fill: var(--darkreader-neutral-background) !important;
}
svg g rect.er.attributeBoxOdd {
    fill: var(--darkreader-neutral-background) !important;
}
svg g rect.er.attributeBoxEven {
    fill: var(--darkreader-selection-background);
    fill-opacity: 0.8 !important;
}
svg rect.er.relationshipLabelBox {
    fill: var(--darkreader-neutral-background) !important;
}
svg g g.nodes rect,
svg g g.nodes polygon {
    fill: var(--darkreader-neutral-background) !important;
}
svg g rect.task {
    fill: var(--darkreader-selection-background) !important;
}
svg line.messageLine0,
svg line.messageLine1 {
    stroke: var(--darkreader-neutral-text) !important;
}
div.mermaid .actor {
    fill: var(--darkreader-neutral-background) !important;
}
mitid-authenticators-code-app > .code-app-container {
    background-color: white !important;
    padding-top: 1rem;
}
iframe#unpaywall[src$="unpaywall.html"] {
    color-scheme: light !important;
}
embed[type="application/pdf"] { filter: invert(100%) contrast(90%); }</style></head><body><div id="root"><div class="a b c"><div class="d e f g h i j k"></div><div class="l c"><div class="l m n o c"><div class="p q r s t u v w x i d y z"><a class="dt ag du be ak b am an ao ap aq ar as at s u w i d q dv z" href="https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F9059c83b6c01&amp;%7Efeature=LoOpenInAppButton&amp;%7Echannel=ShowPostUnderUser&amp;source=---two_column_layout_nav----------------------------------" rel="noopener follow">Open in app<svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" fill="none" viewBox="0 0 10 10" class="ds"><path fill="currentColor" d="M.985 8.485a.375.375 0 1 0 .53.53zM8.75 1.25h.375A.375.375 0 0 0 8.75.875zM8.375 6.5a.375.375 0 1 0 .75 0zM3.5.875a.375.375 0 1 0 0 .75zm-1.985 8.14 7.5-7.5-.53-.53-7.5 7.5zm6.86-7.765V6.5h.75V1.25zM3.5 1.625h5.25v-.75H3.5z" style="--darkreader-inline-fill: currentColor;" data-darkreader-inline-fill=""></path></svg></a><div class="ab q"><p class="be b dw dx dy dz ea eb ec ed ee ef dt"><span><button class="be b dw dx eg dy dz eh ea eb ei ej ed ek el ef em eo ep eq er es et eu ev ew ex ey ez fa fb fc bl fd fe" data-testid="headerSignUpButton">Sign up</button></span></p><div class="aw l"><p class="be b dw dx dy dz ea eb ec ed ee ef dt"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSignInButton" href="https://medium.com/m/signin?operation=login&amp;redirect=https%3A%2F%2Fkevinhoffman.medium.com%2Fcoping-with-mutable-state-in-multiple-threads-with-rust-9059c83b6c01&amp;source=post_page---two_column_layout_nav-----------------------global_nav-----------" rel="noopener follow">Sign in</a></span></p></div></div></div><div class="p q r ab ac"><div class="ab q ae"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab" aria-label="Homepage" data-testid="headerMediumLogo" href="https://medium.com/?source=---two_column_layout_nav----------------------------------" rel="noopener follow"><svg xmlns="http://www.w3.org/2000/svg" width="120" height="26" fill="none" viewBox="0 0 120 26" class="au av"><path fill="#000" d="m29.57 1.404.036-.008V1.12h-7.27l-6.75 15.979-6.75-15.98H1.003v.278l.035.008c1.327.302 2 .752 2 2.374v18.993c0 1.623-.676 2.073-2.003 2.374L1 25.153v.279h5.315v-.278l-.035-.008c-1.327-.302-2-.751-2-2.374V4.88l8.67 20.552h.492l8.924-21.125V23.24c-.114 1.282-.782 1.677-1.983 1.95l-.036.009v.275h9.259V25.2l-.036-.008c-1.203-.274-1.886-.67-2-1.95l-.006-19.464h.006c0-1.622.674-2.072 2-2.374m4.23 12.582c.15-3.412 1.367-5.875 3.41-5.918.629.01 1.157.219 1.568.62.872.852 1.282 2.634 1.219 5.298zm-.092.962h10.85v-.046c-.03-2.61-.78-4.64-2.228-6.033-1.25-1.204-3.103-1.867-5.048-1.867h-.043c-1.01 0-2.248.246-3.13.693a7.3 7.3 0 0 0-2.623 2.086c-1.185 1.479-1.903 3.477-2.078 5.724a14 14 0 0 0-.04.755q-.007.292-.001.587C29.484 21.934 32.213 26 37.059 26c4.254 0 6.73-3.132 7.348-7.336l-.312-.11c-1.085 2.259-3.034 3.628-5.252 3.461-3.028-.228-5.347-3.32-5.137-7.066m23.122 6.893c-.356.85-1.099 1.319-2.094 1.319s-1.905-.689-2.552-1.939c-.694-1.342-1.06-3.24-1.06-5.487 0-4.678 1.445-7.704 3.68-7.704.937 0 1.674.468 2.026 1.284zm7.198 3.335c-1.327-.316-2-.787-2-2.492V0l-8.062 2.392v.293l.05-.004c1.111-.09 1.866.064 2.304.472.343.32.51.809.51 1.498v3.11C56.033 7.25 55.088 7 53.94 7c-2.326 0-4.453.987-5.986 2.779-1.599 1.867-2.444 4.42-2.444 7.38 0 5.287 2.584 8.84 6.43 8.84 2.25 0 4.06-1.242 4.888-3.336v2.811h7.233v-.29zM70.94 3.085c0-1.65-1.236-2.896-2.875-2.896-1.632 0-2.908 1.272-2.908 2.896s1.278 2.896 2.908 2.896c1.64 0 2.875-1.245 2.875-2.896m1.903 22.092c-1.327-.316-2-.787-2-2.492h-.006V7.055l-7.234 2.092v.284l.043.004c1.566.14 1.994.683 1.994 2.525v13.515h7.24v-.29zm18.536 0c-1.327-.316-2-.787-2-2.492V7.055L82.49 9.078v.285l.04.004c1.28.136 1.65.71 1.65 2.56v9.88c-.426.85-1.227 1.356-2.196 1.39-1.573 0-2.439-1.07-2.439-3.012V7.055l-7.234 2.092v.284l.044.004c1.565.14 1.994.683 1.994 2.525v8.362a9.4 9.4 0 0 0 .15 1.741l.13.57C75.243 24.845 76.848 26 79.362 26c2.129 0 3.996-1.328 4.818-3.405v2.885h7.233v-.291zm28.102.298v-.291l-.035-.009c-1.44-.334-2.001-.964-2.001-2.248V12.295C117.445 8.98 115.597 7 112.5 7c-2.257 0-4.16 1.314-4.893 3.36-.582-2.168-2.257-3.36-4.734-3.36-2.175 0-3.88 1.156-4.612 3.11V7.056l-7.233 2.006v.286l.043.004c1.547.138 1.994.697 1.994 2.492v13.631h6.75v-.29l-.037-.01c-1.148-.271-1.519-.767-1.519-2.04V10.95c.304-.715.917-1.562 2.127-1.562 1.504 0 2.266 1.05 2.266 3.116v12.972h6.751v-.29l-.035-.01c-1.149-.271-1.52-.767-1.52-2.04V12.294a7 7 0 0 0-.095-1.21c.322-.777.97-1.696 2.23-1.696 1.524 0 2.265 1.02 2.265 3.116v12.972z" style="--darkreader-inline-fill: #000000;" data-darkreader-inline-fill=""></path></svg></a><div class="aw h"><div class="ab ax ay az ba q bb bc"><div class="bl" aria-hidden="false" aria-describedby="searchResults" aria-labelledby="searchResults"></div><div class="bm bn ab"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M4.092 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0m6.95-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .79-.79l-3.73-3.73A8.05 8.05 0 0 0 11.042 3z" clip-rule="evenodd" style="--darkreader-inline-fill: currentColor;" data-darkreader-inline-fill=""></path></svg></div><input role="combobox" aria-controls="searchResults" aria-expanded="false" aria-label="search" data-testid="headerSearchInput" tabindex="0" class="ax bd be bf z bg bh bi bj bk" placeholder="Search"></div></div></div><div class="h k w ff fg"><div class="fh ab"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerWriteButton" href="https://medium.com/m/signin?operation=register&amp;redirect=https%3A%2F%2Fmedium.com%2Fnew-story&amp;source=---two_column_layout_nav-----------------------new_post_topnav-----------" rel="noopener follow"><div class="be b bf z dt fi fj ab q fk fl"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" aria-label="Write"><path fill="currentColor" d="M14 4a.5.5 0 0 0 0-1zm7 6a.5.5 0 0 0-1 0zm-7-7H4v1h10zM3 4v16h1V4zm1 17h16v-1H4zm17-1V10h-1v10zm-1 1a1 1 0 0 0 1-1h-1zM3 20a1 1 0 0 0 1 1v-1zM4 3a1 1 0 0 0-1 1h1z" style="--darkreader-inline-fill: currentColor;" data-darkreader-inline-fill=""></path><path stroke="currentColor" d="m17.5 4.5-8.458 8.458a.25.25 0 0 0-.06.098l-.824 2.47a.25.25 0 0 0 .316.316l2.47-.823a.25.25 0 0 0 .098-.06L19.5 6.5m-2-2 2.323-2.323a.25.25 0 0 1 .354 0l1.646 1.646a.25.25 0 0 1 0 .354L19.5 6.5m-2-2 2 2" style="--darkreader-inline-stroke: currentColor;" data-darkreader-inline-stroke=""></path></svg><div class="ds l">Write</div></div></a></span></div></div><div class="k j i d"><div class="fh ab"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSearchButton" href="https://medium.com/search?source=---two_column_layout_nav----------------------------------" rel="noopener follow"><div class="be b bf z dt fi fj ab q fk fl"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24" aria-label="Search"><path fill="currentColor" fill-rule="evenodd" d="M4.092 11.06a6.95 6.95 0 1 1 13.9 0 6.95 6.95 0 0 1-13.9 0m6.95-8.05a8.05 8.05 0 1 0 5.13 14.26l3.75 3.75a.56.56 0 1 0 .79-.79l-3.73-3.73A8.05 8.05 0 0 0 11.042 3z" clip-rule="evenodd" style="--darkreader-inline-fill: currentColor;" data-darkreader-inline-fill=""></path></svg></div></a></div></div><div class="fh h k j"><div class="ab q"><p class="be b dw dx dy dz ea eb ec ed ee ef dt"><span><button class="be b dw dx eg dy dz eh ea eb ei ej ed ek el ef em eo ep eq er es et eu ev ew ex ey ez fa fb fc bl fd fe" data-testid="headerSignUpButton">Sign up</button></span></p><div class="aw l"><p class="be b dw dx dy dz ea eb ec ed ee ef dt"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerSignInButton" href="https://medium.com/m/signin?operation=login&amp;redirect=https%3A%2F%2Fkevinhoffman.medium.com%2Fcoping-with-mutable-state-in-multiple-threads-with-rust-9059c83b6c01&amp;source=post_page---two_column_layout_nav-----------------------global_nav-----------" rel="noopener follow">Sign in</a></span></p></div></div></div><div class="l" aria-hidden="false"><button class="ax fm am ab q ao fn fo fp" aria-label="user options menu" data-testid="headerUserIcon"><div class="l fi"><img alt="" class="l fc bx by bz cw" src="Coping%20with%20Mutable%20State%20in%20Multiple%20Threads%20with%20Rust%20_%20by%20Kevin%20Hoffman%20_%20Medium_files/1_dmbNkD5D-u45r44go_cf0g.png" width="32" height="32" loading="lazy" role="presentation"><div class="fq bx l by bz fr n ax fs"></div></div></button></div></div></div><div class="l"><div class="ft fu fv fw fx l"><div class="ab ca"><div class="ch bg fy fz ga gb"></div></div><article><div class="l"><div class="l"><span class="l"></span><section><div><div class="fr gh gi gj gk gl"></div><div class="gm gn go gp gq"><div class="ab ca"><div class="ch bg fy fz ga gb"><div><h1 id="8faf" class="pw-post-title gr gs gt be gu gv gw gx gy gz ha hb hc hd he hf hg hh hi hj hk hl hm hn ho hp hq hr hs ht bj" data-testid="storyTitle">Coping with Mutable State in Multiple Threads with Rust</h1><div><div class="speechify-ignore ab co"><div class="speechify-ignore bg l"><div class="hu hv hw hx hy ab"><div><div class="ab hz"><a rel="noopener follow" href="https://downloader.la/?source=post_page-----9059c83b6c01--------------------------------"><div><div class="bl" aria-hidden="false"><div class="l ia ib bx ic id"><div class="l fi"><img alt="Kevin Hoffman" class="l fc bx dc dd cw" src="Coping%20with%20Mutable%20State%20in%20Multiple%20Threads%20with%20Rust%20_%20by%20Kevin%20Hoffman%20_%20Medium_files/0_k1Wp0sgVkKcaV0aL.jpg" width="44" height="44" loading="lazy" data-testid="authorPhoto"><div class="ie bx l dc dd fr n if fs"></div></div></div></div></div></a></div></div><div class="bm bg l"><div class="ab"><div style="flex:1"><span class="be b bf z bj"><div class="ig ab q"><div class="ab q ih"><div class="ab q"><div><div class="bl" aria-hidden="false"><p class="be b ii ij bj"><a class="af ag ah ai aj ak al am an ao ap aq ar ik" data-testid="authorName" rel="noopener follow" href="https://downloader.la/?source=post_page-----9059c83b6c01--------------------------------">Kevin Hoffman</a></p></div></div></div><span class="il im" aria-hidden="true"><span class="be b bf z dt">·</span></span><p class="be b ii ij dt"><span><a class="in io ah ai aj ak al am an ao ap aq ar ew ip iq" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4a61baec208d&amp;operation=register&amp;redirect=https%3A%2F%2Fkevinhoffman.medium.com%2Fcoping-with-mutable-state-in-multiple-threads-with-rust-9059c83b6c01&amp;user=Kevin+Hoffman&amp;userId=4a61baec208d&amp;source=post_page-4a61baec208d----9059c83b6c01---------------------post_header-----------" rel="noopener follow">Follow</a></span></p></div></div></span></div></div><div class="l ir"><span class="be b bf z dt"><div class="ab cm is it iu"><span class="be b bf z dt"><div class="ab ae"><span data-testid="storyReadTime">6 min read</span><div class="iv iw l" aria-hidden="true"><span class="l" aria-hidden="true"><span class="be b bf z dt">·</span></span></div><span data-testid="storyPublishDate">Mar 5, 2018</span></div></span></div></span></div></div></div><div class="ab co ix iy iz ja jb jc jd je jf jg jh ji jj jk jl jm"><div class="h k w ff fg q"><div class="kc l"><div class="ab q kd ke"><div class="pw-multi-vote-icon fi kf kg kh ki"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerClapButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2F9059c83b6c01&amp;operation=register&amp;redirect=https%3A%2F%2Fkevinhoffman.medium.com%2Fcoping-with-mutable-state-in-multiple-threads-with-rust-9059c83b6c01&amp;user=Kevin+Hoffman&amp;userId=4a61baec208d&amp;source=-----9059c83b6c01---------------------clap_footer-----------" rel="noopener follow"><div><div class="bl" aria-hidden="false"><div class="kj ao kk kl km kn am ko kp kq ki"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" d="M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z" clip-rule="evenodd"></path></svg></div></div></div></a></span></div><div class="pw-multi-vote-count l kr ks kt ku kv kw kx"><p class="be b du z dt"><span class="ky">--</span></p></div></div></div><div><div class="bl" aria-hidden="false"><button class="ao kj lb lc ab q fj ld le" aria-label="responses"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="la"><path d="M18.006 16.803c1.533-1.456 2.234-3.325 2.234-5.321C20.24 7.357 16.709 4 12.191 4S4 7.357 4 11.482c0 4.126 3.674 7.482 8.191 7.482.817 0 1.622-.111 2.393-.327.231.2.48.391.744.559 1.06.693 2.203 1.044 3.399 1.044.224-.008.4-.112.486-.287a.49.49 0 0 0-.042-.518c-.495-.67-.845-1.364-1.04-2.057a4 4 0 0 1-.125-.598zm-3.122 1.055-.067-.223-.315.096a8 8 0 0 1-2.311.338c-4.023 0-7.292-2.955-7.292-6.587 0-3.633 3.269-6.588 7.292-6.588 4.014 0 7.112 2.958 7.112 6.593 0 1.794-.608 3.469-2.027 4.72l-.195.168v.255c0 .056 0 .151.016.295.025.231.081.478.154.733.154.558.398 1.117.722 1.659a5.3 5.3 0 0 1-2.165-.845c-.276-.176-.714-.383-.941-.59z"></path></svg><p class="be b du z dt"><span class="pw-responses-count kz la">4</span></p></button></div></div></div><div class="ab q jn jo jp jq jr js jt ju jv jw jx jy jz ka kb"><div class="lf k j i d"></div><div class="h k"><div><div class="bl" aria-hidden="false"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="headerBookmarkButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9059c83b6c01&amp;operation=register&amp;redirect=https%3A%2F%2Fkevinhoffman.medium.com%2Fcoping-with-mutable-state-in-multiple-threads-with-rust-9059c83b6c01&amp;source=-----9059c83b6c01---------------------bookmark_footer-----------" rel="noopener follow"><svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="none" viewBox="0 0 25 25" class="dt lg" aria-label="Add to list bookmark button"><path fill="currentColor" d="M18 2.5a.5.5 0 0 1 1 0V5h2.5a.5.5 0 0 1 0 1H19v2.5a.5.5 0 1 1-1 0V6h-2.5a.5.5 0 0 1 0-1H18zM7 7a1 1 0 0 1 1-1h3.5a.5.5 0 0 0 0-1H8a2 2 0 0 0-2 2v14a.5.5 0 0 0 .805.396L12.5 17l5.695 4.396A.5.5 0 0 0 19 21v-8.5a.5.5 0 0 0-1 0v7.485l-5.195-4.012a.5.5 0 0 0-.61 0L7 19.985z" style="--darkreader-inline-fill: currentColor;" data-darkreader-inline-fill=""></path></svg></a></span></div></div></div><div class="fc lh cm"><div class="l ae"><div class="ab ca"><div class="li lj lk ll lm ln ch bg"><div class="ab"><div class="bl bg" aria-hidden="false"><div><div class="bl" aria-hidden="false"><button aria-label="Listen" data-testid="audioPlayButton" class="af fj ah ai aj ak al lo an ao ap ew lp lq le lr ls lt lu lv s lw lx ly lz ma mb mc u md me mf"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M3 12a9 9 0 1 1 18 0 9 9 0 0 1-18 0m9-10C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2m3.376 10.416-4.599 3.066a.5.5 0 0 1-.777-.416V8.934a.5.5 0 0 1 .777-.416l4.599 3.066a.5.5 0 0 1 0 .832" clip-rule="evenodd" style="--darkreader-inline-fill: currentColor;" data-darkreader-inline-fill=""></path></svg><div class="j i d"><p class="be b bf z dt">Listen</p></div></button></div></div></div></div></div></div></div></div><div class="bl" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bl" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="headerSocialShareButton" class="af fj ah ai aj ak al lo an ao ap ew lp lq le lr ls lt lu lv s lw lx ly lz ma mb mc u md me mf"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M15.218 4.931a.4.4 0 0 1-.118.132l.012.006a.45.45 0 0 1-.292.074.5.5 0 0 1-.3-.13l-2.02-2.02v7.07c0 .28-.23.5-.5.5s-.5-.22-.5-.5v-7.04l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.79a.42.42 0 0 1 .068.498m-.106.138.008.004v-.01zM16 7.063h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11c-1.1 0-2-.9-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.15.5.5 0 0 1 .15.35.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9v-10.2c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1" clip-rule="evenodd" style="--darkreader-inline-fill: currentColor;" data-darkreader-inline-fill=""></path></svg><div class="j i d"><p class="be b bf z dt">Share</p></div></button></div></div></div></div></div></div></div></div></div><p id="9fac" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">One
 of the value propositions most frequently lauded by Rust developers is 
its freedom from data races. The compiler will literally not allow you 
to build code that could <em class="ne">ever</em> produce a situation where two threads can mutate the same data. This teaches us two things:</p><ol class=""><li id="a85b" class="mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd nf ng nh bj">Loathing of the Rust compiler and its borrow checker (until we make things work)</li><li id="716e" class="mg mh gt mi b mj ni ml mm mn nj mp mq mr nk mt mu mv nl mx my mz nm nb nc nd nf ng nh bj">The extent to which we have written unsafe, race-prone code in other languages</li></ol><p id="bae0" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">I’ve
 learned a great deal from the second bullet point. I look back at some 
of the code I’ve written in the past and I realize that the only reason 
it worked is because some other library had guard rails in place, or the
 lack of data races was an <em class="ne">accident</em>. In other words, my lack of failure was more attributable to random chance than skill.</p><p id="c819" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">Rust
 applications are also praised for their performance. This performance 
comes from its ability to help developers write safe, <em class="ne">multi-threaded</em>
 code. While starting out on my Rust learning curve, I tried concurrency
 a few times and the error messages and ceaseless barrage of red console
 output from the compiler had me running away in search of a security 
blanket (Ah, <strong class="mi gu"><em class="ne">Go</em></strong>, my old friend, you’ll never let me down, will you? You’re so soft and friendly).</p><p id="9518" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">Every language has its own way of dealing with concurrency. In <strong class="mi gu">Go</strong>, we can spin up <em class="ne">goroutines</em> (also called “green” or lightweight threads), and get data in and out of them, simplifying synchronization with <em class="ne">channels</em>. In Elixir, we create a module with functions that communicate with a <em class="ne">process</em>
 (the Erlang BEAM version of a green thread, of which we can create 
millions). In Java and C#, we have OS threads and data access is 
synchronized through mutex and atomic counting guards around <em class="ne">critical sections</em>. Additionally, we have deeply integrated concurrency models like those used by Android, where you can start an <em class="ne">activity</em>
 as a background service and communicate with it by sending and 
subscribing to events. Event dispatch to the Android activity is always 
single-threaded, freeing the developer from the complexities of critical
 sections and mutexes.</p><p id="e814" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">Rust has heavyweight threads, mutexes, atomic reference counting, <em class="ne">and</em> channels. For me, this wide range of choices led to a lot of confusion on how I should or should not deal with concurrency.</p><p id="4655" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">Let’s
 take an example where I’ve got two background threads contributing to 
mutable state. One thread is reading bank transactions from a file 
source while the other is reading them from mobile applications 
(simulated to keep the sample simple). To make this work, each of the 
threads needs a thread-safe reference to the bank account being mutated.
 Here’s the account struct that allows for thread-safe, multi-threaded 
mutation:</p><pre class="nn no np nq nr ns nt nu nv ax nw bj"><span id="82b4" class="nx ny gt nt b ii nz oa l ob oc">#[derive(Debug)]<br><strong class="nt gu">struct </strong>Transaction {<br>    amount: <strong class="nt gu">isize</strong>,<br>    timestamp: <strong class="nt gu">u64</strong>,<br>    txid: String,<br>}</span><span id="11e1" class="nx ny gt nt b ii od oa l ob oc">#[derive(Debug)]<br><strong class="nt gu">struct </strong>Account {<br>    account_number: String,<br>    transactions: Mutex&lt;Vec&lt;Transaction&gt;&gt;,<br>    acct_type: String,<br>}</span></pre><p id="e51b" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">Unlike
 some other languages, where the mutex and the data it protects are 
isolated and it’s left to the developer to guard the right code, in Rust
 the mutex <em class="ne">contains</em> (owns) the data it protects. Calling <code class="cw oe of og nt b">lock</code>
 on a mutex will block all other threads until the produced guard is 
dropped. This is how we can add transactions to a shared account from 
multiple threads:</p><pre class="nn no np nq nr ns nt nu nv ax nw bj"><span id="193e" class="nx ny gt nt b ii nz oa l ob oc"><strong class="nt gu">let </strong>my_savings = Arc::<em class="ne">new</em>(Account::<em class="ne">new</em>("0001"));<br><strong class="nt gu">let </strong>feed_account = my_savings.clone(); // clones the ref, not the item<br><strong class="nt gu">let </strong>mobile_account = my_savings.clone();<br><br><strong class="nt gu">let </strong>file_feed = spawn(<strong class="nt gu">move </strong>|| {<br><br>    <strong class="nt gu">let mut </strong>tx_guard = feed_account.transactions.lock().unwrap();<br><br>    tx_guard.push(Transaction {<br>        amount: 500,<br>        timestamp: 12,<br>        txid: "tx-001".to_owned(),<br>    });<br><br>    tx_guard.push( Transaction {<br>        amount: 750,<br>        timestamp: 4,<br>        txid: "tx-002".to_owned(),<br>    })<br>});<br><br><strong class="nt gu">let </strong>mobile_feed = spawn(<strong class="nt gu">move </strong>|| {<br><br>    mobile_account.transactions.lock().unwrap().push(Transaction {<br>        amount: 50,<br>        timestamp: 7,<br>        txid: "tx-003".to_owned(),<br>    });<br>});<br><br>file_feed.join().unwrap();<br>mobile_feed.join().unwrap();</span></pre><p id="5a51" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">I had an “a-ha!” moment when I realized that cloning an <code class="cw oe of og nt b">Arc</code>
 actually just creates a new reference to the original heap-stored 
value, it doesn’t duplicate the underlying data. This creation of a copy
 of a heap reference is something that many other languages do 
implicitly. In the first thread I store the guard in a variable <code class="cw oe of og nt b">tx_guard</code> because I need it to survive long enough to handle both <code class="cw oe of og nt b">push</code> calls. In the second one I can do it inline because it only lasts until the end of the function call. Finally, I call <code class="cw oe of og nt b">join</code> to wait for both threads to complete.</p><p id="3435" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">I can then inspect the <code class="cw oe of og nt b">transactions</code> field from the original account and see that it contains my transactions in an unpredictable order:</p><pre class="nn no np nq nr ns nt nu nv ax nw bj"><span id="dabe" class="nx ny gt nt b ii nz oa l ob oc">println!("mutating from bg threads:\n\t{:?}", my_savings.transactions);</span></pre><p id="fd8c" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">This compiles and runs and we have <em class="ne">guaranteed</em>
 thread-safe access to the vector of transactions in the single shared 
savings account. This is excellent, but it feels a little <em class="ne">off</em>
 to me. Mutexes are powerful but they’re not as safe as we like to 
think. Even in Rust, you can still produce deadlocks waiting for a mutex
 to be dropped. My exposure to Elixir also makes me chafe at the idea of
 multiple threads mutating a shared component, regardless of how “safe” 
it might seem to the compiler.</p><p id="d83b" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">I
 think we can do better. Obviously everyone has their own opinions here 
and some prefer the flexibility and straightforward nature of mutexes, 
others prefer channels.</p><p id="ab37" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">If
 I were to modify my sample such that the background threads are 
emitting data on sender channels, then the background threads are no 
longer mutating shared data. I can write them in such a style as they 
are emitting <em class="ne">immutable </em>messages or events, and this 
feels more natural to me. Removing the ability to mutate data 
cross-thread, I can simplify my account struct so it contains no 
mutexes:</p><pre class="nn no np nq nr ns nt nu nv ax nw bj"><span id="22d4" class="nx ny gt nt b ii nz oa l ob oc">#[derive(Debug)]<br><strong class="nt gu">struct </strong>Account2 {<br>    account_number: String,<br>    transactions: Vec&lt;Transaction&gt;,<br>    acct_type: String,<br>}</span></pre><p id="82ff" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">I also don’t need an <code class="cw oe of og nt b">Arc</code>
 because I’m not sharing a value of this type across threads — I’m 
keeping it private to whatever thread is responsible for maintaining 
this data. Now, instead of cloning an <code class="cw oe of og nt b">Arc</code> to give multiple threads access to the data, I can just clone a <code class="cw oe of og nt b">Sender</code> channel and give a separate sender to each thread while those channels all still send to the same receiver:</p><pre class="nn no np nq nr ns nt nu nv ax nw bj"><span id="5e6e" class="nx ny gt nt b ii nz oa l ob oc"><strong class="nt gu">let </strong>(tx, rx) = mpsc::channel();<br><br><strong class="nt gu">let </strong>tx2 = mpsc::Sender::clone(&amp;tx);<br><br><strong class="nt gu">let </strong>file_feed2 = spawn(<strong class="nt gu">move </strong>|| {<br>    tx.send(Transaction {<br>        amount: 500,<br>        timestamp: 12,<br>        txid: "ch-tx-001".to_owned(),<br>    }).unwrap();<br>    tx.send(Transaction {<br>        amount: 750,<br>        timestamp: 4,<br>        txid: "ch-tx-002".to_owned(),<br>    }).unwrap();<br>});<br><br><strong class="nt gu">let </strong>mobile_feed2 = spawn(<strong class="nt gu">move </strong>|| {<br>    tx2.send(Transaction {<br>        amount: 50,<br>        timestamp: 7,<br>        txid: "ch-tx-003".to_owned(),<br>    }).unwrap();<br>});<br><br>file_feed2.join().unwrap();<br>mobile_feed2.join().unwrap();</span></pre><p id="097a" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">One
 interesting side effect here is that while these channels are doing 
their background work, the mutable savings account value <em class="ne">may not even exist yet</em>.
 Now the main thread (or a third processing thread, etc) can gather up 
the values from these channels and do thread-private mutation:</p><pre class="nn no np nq nr ns nt nu nv ax nw bj"><span id="bbdd" class="nx ny gt nt b ii nz oa l ob oc"><strong class="nt gu">let mut </strong>tl_savings = Account2 {<br>    acct_type: "Savings".to_owned(),<br>    account_number: "0001".to_owned(),<br>    transactions: Vec::<em class="ne">new</em>(),<br>};<br><br><strong class="nt gu">for </strong>transaction <strong class="nt gu">in </strong>rx {<br>    tl_savings.transactions.push(transaction);<br>}</span></pre><p id="5b61" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">The last <code class="cw oe of og nt b">for</code> loop works because receiver channels can be treated like iterators, where the <code class="cw oe of og nt b">next</code>
 function blocks until there’s a value available on the channel. The for
 loop stops when the sender channel is dropped, which could happen if 
the thread holding the sender goes away. In the case of my sample, this <code class="cw oe of og nt b">for</code> loop completes because <em class="ne">even before I start</em>, the senders have both dropped due to the calls to <code class="cw oe of og nt b">join</code>.</p><p id="8f30" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">You’re
 free to use mutexes if you like, but I’ve also found that giving a 
thread the ability to directly mutate shared state, even under the 
umbrella of mutex safety, creates too tight a coupling. What if I want 
to change the shape of the <code class="cw oe of og nt b">Account</code>
 struct? If I change the thing that is wrapped in a mutex, this could 
then cause cascading changes to all of my worker thread code. I can hide
 the transactions field behind functions like <code class="cw oe of og nt b">add_transaction</code>
 as a start, but channels allow even more loose coupling and as long as I
 treat the immutable messages being passed as a strong contract, my code
 can stay more loosely coupled and, in my opinion, more easily tested.</p><p id="73c5" class="pw-post-body-paragraph mg mh gt mi b mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd gm bj">In
 conclusion, the only parting advice I have is that Rust has a steep 
learning curve, and shared mutation across threads is pretty high up on 
that curve. I had to spend some time getting familiar with building apps
 that don’t do this for a while before diving into the deep end of the 
thread pool (get it? <em class="ne">thread pool</em>??). When you are 
ready for concurrency in Rust, I highly recommend trying a 
“channel-first” approach to finding concurrency solutions and only using
 mutexes if channels become unwieldy.</p></div></div></div></div></section></div></div></article></div><div class="ab ca"><div class="ch bg fy fz ga gb"><div class="oh oi ab iu"><div class="oj ab"><a class="ok ax am ao" href="https://medium.com/tag/rust?source=post_page-----9059c83b6c01---------------rust-----------------" rel="noopener follow"><div class="ol fi cw om gd on oo be b bf z bj op">Rust</div></a></div><div class="oj ab"><a class="ok ax am ao" href="https://medium.com/tag/rustlang?source=post_page-----9059c83b6c01---------------rustlang-----------------" rel="noopener follow"><div class="ol fi cw om gd on oo be b bf z bj op">Rustlang</div></a></div><div class="oj ab"><a class="ok ax am ao" href="https://medium.com/tag/threading?source=post_page-----9059c83b6c01---------------threading-----------------" rel="noopener follow"><div class="ol fi cw om gd on oo be b bf z bj op">Threading</div></a></div><div class="oj ab"><a class="ok ax am ao" href="https://medium.com/tag/multithreading?source=post_page-----9059c83b6c01---------------multithreading-----------------" rel="noopener follow"><div class="ol fi cw om gd on oo be b bf z bj op">Multithreading</div></a></div><div class="oj ab"><a class="ok ax am ao" href="https://medium.com/tag/mutex?source=post_page-----9059c83b6c01---------------mutex-----------------" rel="noopener follow"><div class="ol fi cw om gd on oo be b bf z bj op">Mutex</div></a></div></div></div></div><div class="l"></div><footer class="oq or os ot ou ov ow ox oy ab q oz pa c"><div class="l ae"><div class="ab ca"><div class="ch bg fy fz ga gb"><div class="ab co pb"><div class="ab q kd"><div class="pc l"><span class="l pd pe pf e d"><div class="ab q kd ke"><div class="pw-multi-vote-icon fi kf kg kh ki"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="footerClapButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2F9059c83b6c01&amp;operation=register&amp;redirect=https%3A%2F%2Fkevinhoffman.medium.com%2Fcoping-with-mutable-state-in-multiple-threads-with-rust-9059c83b6c01&amp;user=Kevin+Hoffman&amp;userId=4a61baec208d&amp;source=-----9059c83b6c01---------------------clap_footer-----------" rel="noopener follow"><div><div class="bl" aria-hidden="false"><div class="kj ao kk kl km kn am ko kp kq ki"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" d="M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z" clip-rule="evenodd"></path></svg></div></div></div></a></span></div><div class="pw-multi-vote-count l kr ks kt ku kv kw kx"><p class="be b du z dt"><span class="ky">--</span></p></div></div></span><span class="l h g f pg ph"><div class="ab q kd ke"><div class="pw-multi-vote-icon fi kf kg kh ki"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="footerClapButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2F9059c83b6c01&amp;operation=register&amp;redirect=https%3A%2F%2Fkevinhoffman.medium.com%2Fcoping-with-mutable-state-in-multiple-threads-with-rust-9059c83b6c01&amp;user=Kevin+Hoffman&amp;userId=4a61baec208d&amp;source=-----9059c83b6c01---------------------clap_footer-----------" rel="noopener follow"><div><div class="bl" aria-hidden="false"><div class="kj ao kk kl km kn am ko kp kq ki"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" aria-label="clap"><path fill-rule="evenodd" d="M11.37.828 12 3.282l.63-2.454zM13.916 3.953l1.523-2.112-1.184-.39zM8.589 1.84l1.522 2.112-.337-2.501zM18.523 18.92c-.86.86-1.75 1.246-2.62 1.33a6 6 0 0 0 .407-.372c2.388-2.389 2.86-4.951 1.399-7.623l-.912-1.603-.79-1.672c-.26-.56-.194-.98.203-1.288a.7.7 0 0 1 .546-.132c.283.046.546.231.728.5l2.363 4.157c.976 1.624 1.141 4.237-1.324 6.702m-10.999-.438L3.37 14.328a.828.828 0 0 1 .585-1.408.83.83 0 0 1 .585.242l2.158 2.157a.365.365 0 0 0 .516-.516l-2.157-2.158-1.449-1.449a.826.826 0 0 1 1.167-1.17l3.438 3.44a.363.363 0 0 0 .516 0 .364.364 0 0 0 0-.516L5.293 9.513l-.97-.97a.826.826 0 0 1 0-1.166.84.84 0 0 1 1.167 0l.97.968 3.437 3.436a.36.36 0 0 0 .517 0 .366.366 0 0 0 0-.516L6.977 7.83a.82.82 0 0 1-.241-.584.82.82 0 0 1 .824-.826c.219 0 .43.087.584.242l5.787 5.787a.366.366 0 0 0 .587-.415l-1.117-2.363c-.26-.56-.194-.98.204-1.289a.7.7 0 0 1 .546-.132c.283.046.545.232.727.501l2.193 3.86c1.302 2.38.883 4.59-1.277 6.75-1.156 1.156-2.602 1.627-4.19 1.367-1.418-.236-2.866-1.033-4.079-2.246M10.75 5.971l2.12 2.12c-.41.502-.465 1.17-.128 1.89l.22.465-3.523-3.523a.8.8 0 0 1-.097-.368c0-.22.086-.428.241-.584a.847.847 0 0 1 1.167 0m7.355 1.705c-.31-.461-.746-.758-1.23-.837a1.44 1.44 0 0 0-1.11.275c-.312.24-.505.543-.59.881a1.74 1.74 0 0 0-.906-.465 1.47 1.47 0 0 0-.82.106l-2.182-2.182a1.56 1.56 0 0 0-2.2 0 1.54 1.54 0 0 0-.396.701 1.56 1.56 0 0 0-2.21-.01 1.55 1.55 0 0 0-.416.753c-.624-.624-1.649-.624-2.237-.037a1.557 1.557 0 0 0 0 2.2c-.239.1-.501.238-.715.453a1.56 1.56 0 0 0 0 2.2l.516.515a1.556 1.556 0 0 0-.753 2.615L7.01 19c1.32 1.319 2.909 2.189 4.475 2.449q.482.08.971.08c.85 0 1.653-.198 2.393-.579.231.033.46.054.686.054 1.266 0 2.457-.52 3.505-1.567 2.763-2.763 2.552-5.734 1.439-7.586z" clip-rule="evenodd"></path></svg></div></div></div></a></span></div><div class="pw-multi-vote-count l kr ks kt ku kv kw kx"><p class="be b du z dt"><span class="ky">--</span></p></div></div></span></div><div class="bp ab"><div><div class="bl" aria-hidden="false"><button class="ao kj lb lc ab q fj ld le" aria-label="responses"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="la"><path d="M18.006 16.803c1.533-1.456 2.234-3.325 2.234-5.321C20.24 7.357 16.709 4 12.191 4S4 7.357 4 11.482c0 4.126 3.674 7.482 8.191 7.482.817 0 1.622-.111 2.393-.327.231.2.48.391.744.559 1.06.693 2.203 1.044 3.399 1.044.224-.008.4-.112.486-.287a.49.49 0 0 0-.042-.518c-.495-.67-.845-1.364-1.04-2.057a4 4 0 0 1-.125-.598zm-3.122 1.055-.067-.223-.315.096a8 8 0 0 1-2.311.338c-4.023 0-7.292-2.955-7.292-6.587 0-3.633 3.269-6.588 7.292-6.588 4.014 0 7.112 2.958 7.112 6.593 0 1.794-.608 3.469-2.027 4.72l-.195.168v.255c0 .056 0 .151.016.295.025.231.081.478.154.733.154.558.398 1.117.722 1.659a5.3 5.3 0 0 1-2.165-.845c-.276-.176-.714-.383-.941-.59z"></path></svg><p class="be b bf z dt"><span class="pw-responses-count kz la">4</span></p></button></div></div></div></div><div class="ab q"><div class="pi l ir"><div><div class="bl" aria-hidden="false"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" data-testid="footerBookmarkButton" href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9059c83b6c01&amp;operation=register&amp;redirect=https%3A%2F%2Fkevinhoffman.medium.com%2Fcoping-with-mutable-state-in-multiple-threads-with-rust-9059c83b6c01&amp;source=--------------------------bookmark_footer-----------" rel="noopener follow"><svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="none" viewBox="0 0 25 25" class="dt lg" aria-label="Add to list bookmark button"><path fill="currentColor" d="M18 2.5a.5.5 0 0 1 1 0V5h2.5a.5.5 0 0 1 0 1H19v2.5a.5.5 0 1 1-1 0V6h-2.5a.5.5 0 0 1 0-1H18zM7 7a1 1 0 0 1 1-1h3.5a.5.5 0 0 0 0-1H8a2 2 0 0 0-2 2v14a.5.5 0 0 0 .805.396L12.5 17l5.695 4.396A.5.5 0 0 0 19 21v-8.5a.5.5 0 0 0-1 0v7.485l-5.195-4.012a.5.5 0 0 0-.61 0L7 19.985z" style="--darkreader-inline-fill: currentColor;" data-darkreader-inline-fill=""></path></svg></a></span></div></div></div><div class="pi l ir"><div class="bl" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bl" aria-hidden="false"><button aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post" data-testid="footerSocialShareButton" class="af fj ah ai aj ak al lo an ao ap ew lp lq le lr"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M15.218 4.931a.4.4 0 0 1-.118.132l.012.006a.45.45 0 0 1-.292.074.5.5 0 0 1-.3-.13l-2.02-2.02v7.07c0 .28-.23.5-.5.5s-.5-.22-.5-.5v-7.04l-2 2a.45.45 0 0 1-.57.04h-.02a.4.4 0 0 1-.16-.3.4.4 0 0 1 .1-.32l2.8-2.8a.5.5 0 0 1 .7 0l2.8 2.79a.42.42 0 0 1 .068.498m-.106.138.008.004v-.01zM16 7.063h1.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-11c-1.1 0-2-.9-2-2v-10a2 2 0 0 1 2-2H8a.5.5 0 0 1 .35.15.5.5 0 0 1 .15.35.5.5 0 0 1-.15.35.5.5 0 0 1-.35.15H6.4c-.5 0-.9.4-.9.9v10.2a.9.9 0 0 0 .9.9h11.2c.5 0 .9-.4.9-.9v-10.2c0-.5-.4-.9-.9-.9H16a.5.5 0 0 1 0-1" clip-rule="evenodd" style="--darkreader-inline-fill: currentColor;" data-darkreader-inline-fill=""></path></svg></button></div></div></div></div></div></div></div></div></div></footer><div class="pj pk pl pm pn l bw"><div class="ab ca"><div class="ch bg fy fz ga gb"><div class="ck ab po co"><div class="ab hz"><a rel="noopener follow" href="https://downloader.la/?source=post_page-----9059c83b6c01--------------------------------"><div class="l pp pq bx pr id"><div class="l fi"><img alt="Kevin Hoffman" class="l fc bx ps pt cw" src="Coping%20with%20Mutable%20State%20in%20Multiple%20Threads%20with%20Rust%20_%20by%20Kevin%20Hoffman%20_%20Medium_files/0_k1Wp0sgVkKcaV0aL_002.jpg" width="72" height="72" loading="lazy"><div class="ie bx l ps pt fr n if fs"></div></div></div></a></div><div class="j i d"><div class="ab"><span><button class="be b bf z eo ol ep eq er es et eu ev ew ex ey ez pu fa fb fc bl fd fe">Follow</button></span><div class="ds l"><div><div><div class="bl" aria-hidden="false"><div class="l"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F1c07daa1e62e&amp;operation=register&amp;redirect=https%3A%2F%2Fkevinhoffman.medium.com%2Fcoping-with-mutable-state-in-multiple-threads-with-rust-9059c83b6c01&amp;newsletterV3=4a61baec208d&amp;newsletterV3Id=1c07daa1e62e&amp;user=Kevin+Hoffman&amp;userId=4a61baec208d&amp;source=-----9059c83b6c01---------------------subscribe_user-----------" rel="noopener follow"><button class="be b bf z py am pz nw qa qb qc qd qe qf ev ew ex ey ez fa fb fc bl fd fe" aria-label="Subscribe"><svg xmlns="http://www.w3.org/2000/svg" width="38" height="38" fill="none" viewBox="0 0 38 38" class="pv pw px"><rect width="0.5" height="6.5" x="26.25" y="9.25" rx="0.25"></rect><rect width="0.5" height="6.5" x="29.75" y="12.25" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5 19 20l4-3"></path></svg></button></a></span></div></div></div></div></div></div></div></div><div class="ab cm co"><div class="l"><div class="ab q"><a class="af ag ah ai aj ak al am an ao ap aq ar as at ab q" rel="noopener follow" href="https://downloader.la/?source=post_page-----9059c83b6c01--------------------------------"><h2 class="pw-author-name be qg qh qi qj bj"><span class="gm iw">Written by <!-- -->Kevin Hoffman</span></h2></a></div><div class="oj ab"><div class="l ir"><span class="pw-follower-count be b bf z bj"><a class="af ag ah ai aj ak al am an ao ap aq ar ik" rel="noopener follow" href="https://downloader.la/followers?source=post_page-----9059c83b6c01--------------------------------">1.7K Followers</a></span></div></div><div class="qk l"><p class="be b bf z bj"><span class="gm">In
 relentless pursuit of elegant simplicity. Tinkerer, writer of tech, 
fantasy, and sci-fi. Converting napkin drawings into code for 
@CapitalOne</span></p></div></div><div class="h k"><div class="ab"><span><button class="be b bf z eo ol ep eq er es et eu ev ew ex ey ez pu fa fb fc bl fd fe">Follow</button></span><div class="ds l"><div><div><div class="bl" aria-hidden="false"><div class="l"><span><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F1c07daa1e62e&amp;operation=register&amp;redirect=https%3A%2F%2Fkevinhoffman.medium.com%2Fcoping-with-mutable-state-in-multiple-threads-with-rust-9059c83b6c01&amp;newsletterV3=4a61baec208d&amp;newsletterV3Id=1c07daa1e62e&amp;user=Kevin+Hoffman&amp;userId=4a61baec208d&amp;source=-----9059c83b6c01---------------------subscribe_user-----------" rel="noopener follow"><button class="be b bf z py am pz nw qa qb qc qd qe qf ev ew ex ey ez fa fb fc bl fd fe" aria-label="Subscribe"><svg xmlns="http://www.w3.org/2000/svg" width="38" height="38" fill="none" viewBox="0 0 38 38" class="pv pw px"><rect width="0.5" height="6.5" x="26.25" y="9.25" rx="0.25"></rect><rect width="0.5" height="6.5" x="29.75" y="12.25" rx="0.25" transform="rotate(90 29.75 12.25)"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5"></path><path d="M11.5 14.5 19 20l4-3"></path></svg></button></a></span></div></div></div></div></div></div></div></div><div class="ql bg qm qn qo qp qq qr"></div></div></div><div class="h k j"><div class="ql bg qm qs"></div><div class="ab ca"><div class="ch bg fy fz ga gb"><div class="qt ab kd iu"><div class="qu qv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://help.medium.com/hc/en-us?source=post_page-----9059c83b6c01--------------------------------" rel="noopener follow"><p class="be b du z dt">Help</p></a></div><div class="qu qv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.statuspage.io/?source=post_page-----9059c83b6c01--------------------------------" rel="noopener follow"><p class="be b du z dt">Status</p></a></div><div class="qu qv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/about?autoplay=1&amp;source=post_page-----9059c83b6c01--------------------------------" rel="noopener follow"><p class="be b du z dt">About</p></a></div><div class="qu qv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----9059c83b6c01--------------------------------" rel="noopener follow"><p class="be b du z dt">Careers</p></a></div><div class="qu qv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="mailto:pressinquiries@medium.com?source=post_page-----9059c83b6c01--------------------------------" rel="noopener follow"><p class="be b du z dt">Press</p></a></div><div class="qu qv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://blog.medium.com/?source=post_page-----9059c83b6c01--------------------------------" rel="noopener follow"><p class="be b du z dt">Blog</p></a></div><div class="qu qv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----9059c83b6c01--------------------------------" rel="noopener follow"><p class="be b du z dt">Privacy</p></a></div><div class="qu qv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----9059c83b6c01--------------------------------" rel="noopener follow"><p class="be b du z dt">Terms</p></a></div><div class="qu qv l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://speechify.com/medium?source=post_page-----9059c83b6c01--------------------------------" rel="noopener follow"><p class="be b du z dt">Text to speech</p></a></div><div class="qu l"><a class="af ag ah ai aj ak al am an ao ap aq ar as at" href="https://medium.com/business?source=post_page-----9059c83b6c01--------------------------------" rel="noopener follow"><p class="be b du z dt">Teams</p></a></div></div></div></div></div></div></div></div></div></div>
<script> 
    document.querySelector('.l.an.q').innerHTML = '<a href="https://downloader.la" class="logo"><img src="logo-header.png"></a>' 
</script>
</body></html>